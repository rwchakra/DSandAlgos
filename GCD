Problem - https://www.interviewbit.com/problems/greatest-common-divisor/

Code:

class Solution:
    # @param A : integer
    # @param B : integer
    # @return an integer
    def gcd(self, A, B):

        fact_A = []
        fact_B = []
        
        #Handle cases where A or B are zero.
        
        if(A == 0):
            return B
        elif(B == 0):
            return A
        elif(A == 0 and B == 0):
            return 1
        else:
        #First find factors of A
        #fact_A.append(1)
            i = 1
            j = 1
            while(i * i <= A):
                if A%i == 0:
                    fact_A.append(i)
                    fact_A.append(A/i)
                i += 1
            #print fact_A        
            #Find factors of B
            #fact_B.append(1)
            while(j * j <= B):
                if B%j == 0:
                    fact_B.append(j)
                    fact_B.append(B/j)
                j += 1
            #print fact_B        
            common = set(fact_A).intersection(set(fact_B))
            #print common
        return max(common)
